class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        List<List<Integer>> dp = new ArrayList<>();
        int min = triangle.get(0).get(0);
        dp.add(0, new ArrayList<>());
        dp.get(0).add(triangle.get(0).get(0));
        for (int i = 1; i < triangle.size(); i++) {
            dp.add(i, new ArrayList<>());
            min = Integer.MAX_VALUE;
            for (int j = 0; j < triangle.get(i).size(); j++) {
                if (j == 0) {
                    dp.get(i).add(j, dp.get(i - 1).get(j) + triangle.get(i).get(j));
                } else if (j == triangle.get(i).size() - 1) {
                    dp.get(i).add(j, dp.get(i - 1).get(j - 1) + triangle.get(i).get(j));
                } else {
                    dp.get(i).add(j, Math.min(dp.get(i - 1).get(j), dp.get(i - 1).get(j - 1))
                                  + triangle.get(i).get(j));
                }
                min = Math.min(min, dp.get(i).get(j));
            }
        }
        return min;
    }
}
