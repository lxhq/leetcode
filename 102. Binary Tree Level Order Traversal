/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<List<Integer>> result = new ArrayList<>();
        if (root== null) return result;
        queue.offer(root);
        int counter = 0;
        while (queue.size() != 0) {
            int num = queue.size();
            result.add(counter, new ArrayList<>());
            for (int i = 0; i < num; i++) {
                TreeNode node = queue.poll();
                if (node != null) {
                    result.get(counter).add(node.val);
                    queue.offer(node.left);
                    queue.offer(node.right);
                }
            }
            if (result.get(counter).size() == 0) {
                result.remove(counter);
                break;
            }
            counter++;
        }
        return result;
    }
}
