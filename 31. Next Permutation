class Solution {
    public void nextPermutation(int[] nums) {
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                swap(nums, find(nums, i - 1), i - 1);
                Arrays.sort(nums, i, nums.length);
                return;
            }
        }
        Arrays.sort(nums);
    }
    
    private void swap(int[] nums, int n1, int n2) {
        int temp = nums[n1];
        nums[n1] = nums[n2];
        nums[n2] = temp;
    }
    
    private int find(int[] nums, int n) {
        int nextMax = 0;
        int diff = Integer.MAX_VALUE;
        for (int i = n + 1; i < nums.length; i++) {
            if (nums[i] - nums[n] < diff && nums[i] - nums[n] > 0) {
                nextMax = i;
            }
        }
        return nextMax;
    }
}
