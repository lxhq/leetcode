/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        dummy.next =  helper(dummy.next, l1, l2, 0);
        return dummy.next;
    }
    
    private ListNode helper(ListNode result, ListNode l1, ListNode l2, int carry) {
        if (l1 == null && l2 == null && carry == 0) {
            return null;
        } 
        if (l1 == null && l2 == null && carry != 0) {
            result = new ListNode(carry);
            return result;
        }
        if (l1 == null && l2 != null) {
            result = new ListNode((l2.val + carry) % 10);
            result.next =  helper(result.next, null, l2.next, (l2.val + carry) >= 10 ? 1 : 0);
            return result;
        }
        if (l1 != null && l2 == null) {
            result = new ListNode((l1.val + carry) % 10);
            result.next = helper(result.next, l1.next, null, (l1.val + carry) >= 10 ? 1 : 0);
            return result;
        } else {
            result = new ListNode((l1.val + l2.val + carry) % 10);
            result.next = helper(result.next, l1.next, l2.next, (l1.val + l2.val + carry) >= 10 ? 1 : 0);
            return result;
        }
    }
}
